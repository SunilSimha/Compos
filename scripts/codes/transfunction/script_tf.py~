#This file calls transfunction.py to calculate transfunction for a set of given cosmological parameters.

from __future__ import division
import numpy as np
import matplotlib.pyplot as mp
import sys
import os

from compos import const
import compos.transfunction as tf

f = os.getcwd()


const.initializecosmo(0.3, 0.1, 0.2, 0.677701323, 2.7255/2.7, omq = 0.7,sigma8 = 0.8288 , w_0 = -1, w_1 = 0,n_s = 0.96)

kt = np.loadtxt('/home/yanziang/research/software/Compos/scripts/results/callcamb/spectra/test(0.0459279083196,0.0918558166392,0.0,0,67.7701323,2.7255)_transfer_out.dat')
kt = np.transpose(kt)

k = kt[0]
k = k * const.cosmo['h']
zero = np.zeros(np.size(k))

t = tf.transfunction(k,const.cosmo)
t_camb = kt[6]
t = t_camb[0] / t[0] * t

ob = const.cosmo['omega_b']
o0 = const.cosmo['omega_0']

const.initializecosmo(0.3, 0.2, 0.1, 0.677701323, 2.7255/2.7, omq = 0.7,sigma8 = 0.8288 , w_0 = -1, w_1 = 0,n_s = 0.96,callcamb = 1)

os.chdir(f)

kt1 = np.loadtxt('/home/yanziang/research/software/Compos/scripts/results/callcamb/spectra/test(0.0918558166392,0.0459279083196,0.0,0,67.7701323,2.7255)_transfer_out.dat')
kt1 = np.transpose(kt1)

k1 = kt1[0]
k1 = k1 * const.cosmo['h']

t1 = tf.transfunction(k1,const.cosmo)
t_camb1 = kt1[6]
t1 = t_camb1[0] / t1[0] * t1

ob1 = const.cosmo['omega_b']
o01 = const.cosmo['omega_0']

mp.subplot(221)
mp.loglog(k/const.cosmo['h'],np.abs(t),label = 'COMPOS')
#mp.ylim(0.001,10)

pl = mp.xlim()[0] * 2
pd = mp.ylim()[0] * 2
pu = mp.ylim()[0] * 6

mp.xlabel(r'$k(h Mpc^{-1}$)')
mp.ylabel(r'$|T(k)|$')
mp.text(pl,pu,'$\Omega_b=$'+str(ob))
mp.text(pl,pd,'$\Omega_0=$'+str(o0)+', h='+str(const.cosmo['h']))
mp.legend(fontsize = 10)

mp.subplot(222)
mp.loglog(k/const.cosmo['h'],np.abs(t_camb),label = 'CAMB')
#mp.ylim(0.001,10)

pl = mp.xlim()[0] * 2
pd = mp.ylim()[0] * 2
pu = mp.ylim()[0] * 3
mp.legend(fontsize = 10)

mp.xlabel(r'$k(h Mpc^{-1}$)')
mp.ylabel(r'$|T(k)|$')
#mp.text(pl,pu,'$\Omega_b/\Omega_0=$'+str(const.cosmo['omega_b']/const.cosmo['omega_0']))
#mp.text(pl,pd,'$\Omega_0=$'+str(const.cosmo['omega_0'])+', h='+str(const.cosmo['h']))

mp.subplot(223)
mp.loglog(k1/const.cosmo['h'],np.abs(t1),label = 'COMPOS')
#mp.ylim(0.001,10)

pl = mp.xlim()[0] * 2
pd = mp.ylim()[0] * 2
pu = mp.ylim()[0] * 6
mp.legend(fontsize = 10)

mp.xlabel(r'$k(h Mpc^{-1}$)')
mp.ylabel(r'$|T(k)|$')
mp.text(pl,pu,'$\Omega_b=$'+str(ob1))
mp.text(pl,pd,'$\Omega_0=$'+str(o01)+', h='+str(const.cosmo['h']))

mp.subplot(224)
mp.loglog(k1/const.cosmo['h'],np.abs(t_camb1),label = 'CAMB')
#mp.ylim(0.001,10)

pl = mp.xlim()[0] * 2
pd = mp.ylim()[0] * 2
pu = mp.ylim()[0] * 3
mp.legend(fontsize = 10)

mp.xlabel(r'$k(h Mpc^{-1}$)')
mp.ylabel(r'$|T(k)|$')
#mp.text(pl,pu,'$\Omega_b=$'+str(ob))
#mp.text(pl,pd,'$\Omega_0=$'+str(o0)+', h='+str(const.cosmo['h']))


mp.savefig('../../results/transfunction/transf(h=' + str(const.cosmo['h']) + ',O_0=' + str(const.cosmo['omega_0']) + ',O_b=' + str(const.cosmo['omega_b']) + ').pdf')
mp.show()

